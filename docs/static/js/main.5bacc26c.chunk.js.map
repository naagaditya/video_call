{"version":3,"sources":["firebase.config.js","room/appendVideo.js","room/createNewConnection.js","room/Room.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","appendVideo","remoteStream","remoteVideo","document","createElement","style","playsInline","autoplay","muted","srcObject","getElementById","appendChild","configuration","createNewConnection","localStream","candidateId","connectedCandidates","connection","RTCPeerConnection","getTracks","forEach","track","console","log","addTrack","MediaStream","createDataChannel","onopen","e","window","push","ontrack","event","streams","Room","a","navigator","mediaDevices","getUserMedia","video","audio","querySelector","openUserMedia","roomId","location","search","split","roomRef","collection","doc","RTCPeerConnections","myId","createConnection","onicecandidate","candidate","update","FieldValue","arrayUnion","toJSON","onicegatheringstatechange","ev","target","iceGatheringState","includes","onicecandidateerror","errorText","createOffer","offer","type","sdp","setLocalDescription","updateCadidateArray","updateICEGathering","get","roomSnapshot","candidates","exists","data","totalCandiates","parseInt","Object","keys","length","onSnapshot","snapshot","myDataConnections","remoteOffer","RTCSessionDescription","setRemoteDescription","createAnswer","answer","candidateIndex","iceCandidate","RTCIceCandidate","addIceCandidate","currentRemoteDescription","iceCandidates","init","id","autoPlay","width","maxWidth","App","createRoom","add","href","className","Button","variant","onClick","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5bacc26c.chunk.js","sourcesContent":["import firebase from 'firebase'\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDdzhAHhMQeAo4egpTbj3K-JiuV_InAFkU\",\n    authDomain: \"fir-rtc-8e4b2.firebaseapp.com\",\n    databaseURL: \"https://fir-rtc-8e4b2.firebaseio.com\",\n    projectId: \"fir-rtc-8e4b2\",\n    storageBucket: \"fir-rtc-8e4b2.appspot.com\",\n    messagingSenderId: \"159303557727\",\n    appId: \"1:159303557727:web:2ae59edac452b77736b1ea\",\n    measurementId: \"G-FWJYK5VF1B\"\n  };\n  firebase.initializeApp(firebaseConfig);\nconst db= firebase.firestore();\n\nexport default db;","const appendVideo = (remoteStream) => {\n  const remoteVideo = document.createElement (\"video\");\n  remoteVideo.style = \"width: 100%;max-width:500px;\"\n  remoteVideo.playsInline = true;\n  remoteVideo.autoplay = true;\n  remoteVideo.muted=true;\n  remoteVideo.srcObject = remoteStream;\n  document.getElementById('room').appendChild(remoteVideo);\n}\n\nexport default appendVideo;","import appendVideo from './appendVideo'\nconst configuration = {\"iceServers\":[{\"urls\":[\"stun:turn2.l.google.com\"]}]};\n\nconst createNewConnection = (localStream, candidateId, connectedCandidates) => {\n  const connection = new RTCPeerConnection(configuration);\n  localStream && localStream.getTracks().forEach(track => {\n    console.log('adding track in connection');\n    connection.addTrack(track, localStream);\n  });\n  const remoteStream = new MediaStream();\n  const sendChannel = connection.createDataChannel(\"sendChannel\");\n  sendChannel.onopen = e => {\n    console.log(\"open!!!!\", candidateId);\n    window.connectedCandidates.push(`${candidateId}`);\n    appendVideo(remoteStream);\n  };\n  connection.ontrack = event => {\n    event.streams[0].getTracks().forEach(track => {\n      remoteStream.addTrack(track);\n    });\n  }\n  return connection;\n}\nexport default createNewConnection;","import React from 'react';\nimport db from '../firebase.config';\nimport createNewConnection from './createNewConnection';\nimport firebase from 'firebase'\n\nexport default function Room() {\n  window.connectedCandidates = [];\n  let localStream;\n  const openUserMedia = async () => {\n    localStream = await navigator.mediaDevices.getUserMedia(\n      {video: true, audio: true});\n    document.querySelector('#localVideo').srcObject = localStream;\n  }\n  openUserMedia();\n  const roomId = window.location.search.split('=')[1];\n  const roomRef = db.collection('rooms').doc(`${roomId}`);\n  const RTCPeerConnections = {};\n  let myId = 0;\n  const createConnection = async (candidateId) => {\n    const connection = createNewConnection(localStream, candidateId, window.connectedCandidates);\n    RTCPeerConnections[candidateId] = connection;\n    connection.onicecandidate = async e =>  {\n      if (e.candidate) {\n        await roomRef.update({\n          [`${candidateId}.${myId}.candidate_for_${myId}`]: firebase.firestore.FieldValue.arrayUnion(e.candidate.toJSON())\n        });\n      }\n    }\n    connection.onicegatheringstatechange = async ev => {\n      if (ev.target.iceGatheringState === 'complete' && !window.connectedCandidates.includes(candidateId)) {\n        await roomRef.update({\n          [`${candidateId}.${myId}.iceGatheringComplete_for_${myId}`]: true\n        });\n      }\n    }\n    connection.onicecandidateerror = (e) => {console.log(e.errorText)}\n    const offer = await connection.createOffer();\n    await roomRef.update({\n      [`${candidateId}.${myId}`]: {\n        offer: {\n          type: offer.type,\n          sdp: offer.sdp\n        }\n      }\n    });\n    connection.setLocalDescription(offer);\n    console.log('step 1: offer created and updated');\n  }\n  const updateCadidateArray = async (candidate, candidateId) => {\n    if (candidate) {\n      await roomRef.update({\n        [`${myId}.${candidateId}.candidate_for_${myId}`]: firebase.firestore.FieldValue.arrayUnion(candidate.toJSON())\n      });\n    }\n  }\n  const updateICEGathering = async (iceGatheringState, candidateId) => {\n    if (iceGatheringState === 'complete' && !window.connectedCandidates.includes(candidateId)) {\n      await roomRef.update({\n        [`${myId}.${candidateId}.iceGatheringComplete_for_${myId}`]: true\n      });\n    }\n  }\n  const init = async () => {\n    const roomSnapshot = await roomRef.get();\n    const candidates = roomSnapshot.exists && roomSnapshot.data();\n    const totalCandiates = parseInt(Object.keys(candidates).length);\n    if (totalCandiates) {\n      myId = parseInt(Object.keys(candidates)[totalCandiates - 1]) + 1;\n      Object.keys(roomSnapshot.data()).forEach(createConnection);\n    }\n    await roomRef.update({\n      [myId]: {}\n    });\n    roomRef.onSnapshot(async snapshot => {\n      // search offer, consume offer and create answer\n      const myDataConnections = snapshot.data()[myId];\n      for (const candidateId of Object.keys(myDataConnections)) {\n        if (RTCPeerConnections[candidateId] && window.connectedCandidates.includes(candidateId)) {\n          return;\n        }\n        const data = myDataConnections[candidateId];\n        if (data && data.offer && !RTCPeerConnections[candidateId]) {\n          const offer = data.offer;\n          const connection = createNewConnection(localStream, candidateId, window.connectedCandidates);\n          RTCPeerConnections[candidateId] = connection;\n          connection.onicecandidate = e =>  {\n            updateCadidateArray(e.candidate, candidateId);\n          }\n          connection.onicegatheringstatechange = ev => {\n            updateICEGathering(ev.target.iceGatheringState, candidateId);\n          }\n          const remoteOffer = new RTCSessionDescription(offer);\n          await connection.setRemoteDescription(remoteOffer);\n          const answer = await connection.createAnswer()\n          await connection.setLocalDescription(answer);\n          await roomRef.update({\n            [`${myId}.${candidateId}`]: {\n              answer: {\n                type: answer.type,\n                sdp: answer.sdp\n              }\n            }\n          });\n          console.log('step 2: set offer created answer and updated answer');\n        }\n        if (data && data[`iceGatheringComplete_for_${myId}`] && data[`iceGatheringComplete_for_${candidateId}`]) {\n          // this is use to initiate trying candidate pairs\n          await roomRef.update({\n            [`${myId}.${candidateId}.try_canditate`]: 0,\n            [`${myId}.${candidateId}.iceGatheringComplete_for_${myId}`]: false,\n            [`${myId}.${candidateId}.iceGatheringComplete_for_${candidateId}`]: false,\n          });        \n        }\n        if (data && data[`try_canditate`] >= 0 && !data['try_canditate_start'] && !window.connectedCandidates.includes(candidateId)) {\n          const candidateIndex = data[`try_canditate`];\n          const iceCandidate = data[`candidate_for_${myId}`][candidateIndex];  \n          if (iceCandidate) {\n            const candidate = new RTCIceCandidate(iceCandidate);\n            await RTCPeerConnections[candidateId].addIceCandidate(candidate);\n            console.log('tried ', candidateIndex);\n          }\n          await roomRef.update({\n            [`${myId}.${candidateId}.try_canditate_start`]: true\n          }); \n        }\n      }\n      // search answer, consume answer and setRemoteDescription\n      for (const candidateId of Object.keys(RTCPeerConnections)) {\n        const connection = RTCPeerConnections[candidateId];\n        const data = snapshot.data()[candidateId][myId];\n        if (!connection.currentRemoteDescription && data && data.answer) {\n          const answer = new RTCSessionDescription(data.answer);\n          await connection.setRemoteDescription(answer);\n          console.log('Step 3: Got the answer and set the answer to remote');\n        }\n        if ( data && data[`try_canditate_start`] && !window.connectedCandidates.includes(candidateId)) {\n          const candidateIndex = data[`try_canditate`];\n          const iceCandidates = data[`candidate_for_${candidateId}`] || [];\n          for (const iceCandidate of iceCandidates) {\n            if (!window.connectedCandidates.includes(candidateId) && iceCandidate) {\n              const candidate = new RTCIceCandidate(iceCandidate);\n              await connection.addIceCandidate(candidate);\n              console.log('tried ', candidateIndex);\n            }\n          }\n          if (!window.connectedCandidates.includes(candidateId) && candidateIndex < data[`candidate_for_${myId}`].length) {\n            await roomRef.update({\n              [`${candidateId}.${myId}.try_canditate`]: candidateIndex + 1,\n              [`${candidateId}.${myId}.try_canditate_start`]: false\n            }); \n          }\n        }\n      }\n    });\n  }\n  init();\n  return (\n    <div id=\"room\">\n      <video id=\"localVideo\" muted autoPlay playsInline style={{width: '100%', maxWidth: '500px'}}></video>\n    </div>\n  );\n}","import { Button } from 'react-bootstrap';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Room from './room/Room';\nimport db from './firebase.config';\n\nfunction App() {\n  const roomId = window.location.search.split('=')[1];\n  if (roomId) {\n    return <Room/>\n  }\n  const createRoom = async () => {\n    const roomRef = await db.collection('rooms').add({});\n    window.location.href = `${window.location.href}?roomId=${roomRef.id}`\n  }\n  return (\n    <div className=\"App\">\n      <Button\n        variant=\"primary\"\n        onClick={createRoom}>\n        Create Room →\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}